 private void processImage(final Bitmap bitmap){
        new AsyncTask<Void, Void, Bitmap>() {
            @Override
            protected Bitmap doInBackground(Void... params) {
                //crop anh va save anh
                Bitmap circularBitmap = ImageUtils.getCircularBitmap(bitmap);
                storeImage(circularBitmap);
                return null;
            }

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                //hien thi khi xu ly
                progress.setMessage("loading...");
                progress.setCancelable(false);
                progress.setCanceledOnTouchOutside(false);
                progress.show();

            }

            @Override
            protected void onPostExecute(Bitmap bitmap) {
                super.onPostExecute(bitmap);
                //hien thi ra ngoai
                // tat dialog
                progress.dismiss();
                Intent returnIntent = new Intent();
                setResult(Activity.RESULT_OK, returnIntent);
                finish();
            }
        }.execute();
    }
	
=============================================================================
Phuong thuc:
 new UserProfile.DownloadImage((ImageView)findViewById(R.id.profileImage)).execute(imageUrl);
 
 public class DownloadImage extends AsyncTask<String, Void, Bitmap>{
        ImageView bmImage;

        public DownloadImage(ImageView bmImage){
            this.bmImage = bmImage;
        }

        protected Bitmap doInBackground(String... urls){
            String urldisplay = urls[0];
            Bitmap mIcon11 = null;
            try{
                InputStream in = new java.net.URL(urldisplay).openStream();
                mIcon11 = BitmapFactory.decodeStream(in);
            }catch (Exception e){
                Log.e("Error", e.getMessage());
                e.printStackTrace();
            }
            return mIcon11;
        }

        protected void onPostExecute(Bitmap result){
            bmImage.setImageBitmap(result);
        }

}



